{"version":3,"sources":["redux/services/userServices.js","redux/actions/uiActions.js","redux/actions/userActions.js","components/StyledButton.js","components/navbar.js","redux/constants/spotifyDataConstants.js","redux/services/spotifyDataServices.js","redux/actions/spotifyDataActions.js","components/subnav.js","components/tabtracks.js","components/Genres.js","components/HomePage/HomePage.js","components/NotLogged/NotLogged.js","components/PrivateRoute.js","components/Callback.js","components/App/App.js","serviceWorker.js","redux/reducers/ui.js","redux/reducers/user.js","redux/reducers/spotifyData.js","redux/reducers/index.js","redux/store/index.js","index.js","redux/constants/userConstants.js","redux/constants/uiConstants.js"],"names":["require","config","querystring","userServices","getUserInfo","accessToken","headers","axios","get","authorizeUser","window","open","encodeURIComponent","process","getAccessToken","code","data","stringify","client_id","client_secret","redirect_uri","post","then","uiConstants","userConstants","authenticateUser","refreshToken","dispatch","tokens","user","type","LOG_USER_STORE_USER","storeUser","LOG_USER","error","failure","LOG_USER_STORE_TOKENS","storeTokens","request","LOG_USER_REQUEST","LOG_USER_FAILURE","StyledButton","withStyles","root","background","borderRadius","border","color","height","boxShadow","Button","actionCreators","setPageTitle","name","SET_PAGE_TITLE","disconnectUser","localStorage","setItem","LOG_USER_DISCONNECT","connectedTopBar","connect","state","userImage","images","url","pageTitle","ui","props","className","variant","startIcon","Avatar","src","onClick","spotifyDataConstants","spotifyDataServices","getTopTracksLastMonth","getTopGenresLastMonth","getTopTracksLast6Month","getTopGenresLast6Month","getTopTracksAllTime","getTopGenresAllTime","extractFavoriteTracks","tracks","topTracks","forEach","track","i","artists","artist","push","trackInfo","albumCoverURL","album","position","trackName","artistName","join","extractFavoriteGenres","genres","genre","countedGenres","count","reduce","n","val","countedGenre","filteredCountedGenres","filter","v","a","findIndex","t","console","log","totalGenres","percentGenres","percent","percentGenre","toFixed","sort","compare","getPercentageOfGenres","b","parseInt","topTrackRequest","topGenreRequest","StyledTabs","indicator","display","justifyContent","backgroundColor","maxWidth","width","Tabs","TabIndicatorProps","children","StyledTab","theme","marginTop","textTransform","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","marginRight","spacing","opacity","Tab","disableRipple","useStyles","makeStyles","flexGrow","padding","demo1","palette","paper","demo2","getTopLastMonth","getState","items","storeTopTracksLastMonth","catch","response","topGenres","storeTopGenresLastMonth","getTopLast6Month","storeTopTracksLast6Month","storeTopGenresLast6Month","getTopAllTime","storeTopTracksAllTime","storeTopGenresAllTime","connectedSubNav","classes","React","useState","value","setValue","useEffect","Typography","onChange","event","newValue","aria-label","label","StyledTableCell","head","common","white","borderBottom","body","TableCell","StyledTableRow","transition","action","hover","TableRow","table","minWidth","paddingTop","title","marginBottom","connectedCustomizedTables","spotifyData","jsdata","rows","setrows","tmp","line","img","nb","style","marginLeft","TableContainer","Table","size","TableHead","align","TableBody","map","row","alt","component","scope","connectedGraph","gender","setgender","setpercent","tmpgenre","tmpourcent","options","series","chart","labels","fill","yaxis","show","legend","colors","plotOptions","polarArea","rings","strokeWidth","monochrome","enabled","shadeTo","shadeIntensity","HomePage","AppBar","elevation","Toolbar","connectedNotLogged","isLogged","to","connectedPrivateRoute","Component","rest","render","routeProps","pathname","from","location","access_token","refresh_token","connectedCallback","queries","split","parser","document","createElement","searchObject","href","search","replace","length","decodeURIComponent","protocol","host","hostname","port","params","hash","parseURL","connectedApp","getItem","exact","path","Boolean","match","defaultState","UIReducer","userReducer","requesting","topTracksRequesting","topGenresRequesting","spotifyDataReducer","reducers","combineReducers","uiReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"6QACAA,EAAQ,IAAUC,SAClB,IAAMC,EAAcF,EAAQ,IAEfG,EAAe,CACxBC,YAsCJ,SAAqBC,GACjB,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,gCAAiC,CAC9CF,aA3CJG,cAIJ,WAKIC,OAAOC,KAAK,qHAGWC,mBALFC,0BAMjB,UAAYD,mBAPD,iCAQX,UAbJE,eAiBJ,SAAwBC,GACpB,IAAMC,EAAOd,EAAYe,UAAU,CAC/BC,UAAWL,mCACXM,cAAeN,mCACfO,aAAcP,yBACd,WAAc,qBACdE,KAAMA,IAOV,OAAQR,IAAMc,KAAK,yCAA0CL,EAAM,CAC/DV,QALY,CACZ,eAAgB,uCAKhBgB,S,ICvCAC,EAAgBvB,EAAQ,IAAxBuB,Y,ICGAC,EAAkBxB,EAAQ,IAA1BwB,cAiCD,SAASC,EAAiBpB,EAAaqB,GAC1C,OAAO,SAACC,GACJ,IAAMC,EAAS,CACXvB,cACAqB,gBAEJC,EAKD,SAAqBtB,GACxB,OAAO,SAAAsB,GACHxB,EAAaC,YAAYC,GACpBiB,MACG,SAAAO,GACIF,EAuBb,SAAmBE,GACtB,MAAO,CACHC,KAAMN,EAAcO,oBACpBF,QA1BqBG,CAAUH,EAAKb,OACxBW,GD5CT,SAAAA,GACHA,EAAS,CAAEG,KAAMP,EAAYU,iBC6CrB,SAAAC,GACIP,EAASQ,EAAQD,QAdpB9B,CAAYC,IACrBsB,EAyBD,SAAqBC,GACxB,MAAO,CACHE,KAAMN,EAAcY,sBACpBR,UA5BSS,CAAYT,KAmBtB,SAASU,IACZ,MAAO,CACHR,KAAMN,EAAce,kBAkBrB,SAASJ,EAAQD,GACpB,MAAO,CACHJ,KAAMN,EAAcgB,iBACpBN,S,uDClEOO,EAhBMC,YAAW,CAC5BC,KAAM,CACFC,WAAY,mDACZC,aAAc,EACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,GAERC,UAAW,wCACX,UAAW,CACPH,OAAQ,OACRG,UAAW,6CAXFP,CAclBQ,KCKGC,EAAiB,CACnBC,aHrBG,SAAsBC,GACzB,OAAO,SAAA1B,GACHA,EAAS,CAAEG,KAAMP,EAAY+B,eAAgBD,WGoBjDE,eFiEG,WAGH,OAFAC,aAAaC,QAAQ,eAAgB,IACrCD,aAAaC,QAAQ,gBAAiB,IAC/B,CACH3B,KAAMN,EAAckC,uBEtD5B,IAQeC,EARSC,aAZxB,SAAyBC,GACrB,IAAIC,EAAY,KAKhB,OAJID,EAAMhC,KAAKA,MAAQgC,EAAMhC,KAAKA,KAAKkC,OAAO,KAC1CD,EAAYD,EAAMhC,KAAKA,KAAKkC,OAAO,GAAGC,KAGnC,CACHC,UAAWJ,EAAMK,GAAGD,UACpBH,eAIyCX,EAAzBS,EA9BT,SAACO,GACZ,OACI,sBAAKC,UAAU,mBAAf,UACI,8BAAK,oBAAIA,UAAU,OAAd,wBACL,cAAC,EAAD,CAAcA,UAAU,SAASC,QAAQ,WAAWtB,MAAM,UACtDuB,UAAW,cAACC,EAAA,EAAD,CAAQC,IAAKL,EAAML,YAC9BW,QAAS,kBAAMN,EAAMZ,kBAFzB,8B,mDCbCmB,EACmB,6BADnBA,EAEmB,6BAFnBA,EAGa,uBAHbA,EAIiC,2CAJjCA,EAKmC,6CALnCA,EAM+B,yCAN/BA,EAOiC,2CAPjCA,EAQmC,6CARnCA,EAS+B,yCCP/BC,EAAsB,CAC/BC,sBAQJ,SAA+BvE,GAE3B,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,0EAA2E,CACxFF,aAdJuE,sBAkBJ,SAA+BxE,GAC3B,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,2EAA4E,CACzFF,aAvBJwE,uBA2BJ,SAAgCzE,GAE5B,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,2EAA4E,CACzFF,aAjCJyE,uBAqCJ,SAAgC1E,GAC5B,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,4EAA6E,CAC1FF,aA1CJ0E,oBA8CJ,SAA6B3E,GAEzB,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,yEAA0E,CACvFF,aApDJ2E,oBAwDJ,SAA6B5E,GACzB,IAAMC,EAAU,CACZ,cAAiB,UAAYD,GAGjC,OAAOE,IAAMC,IAAI,0EAA2E,CACxFF,cCsFR,SAAS4E,EAAsBC,GAC3B,IAAIC,EAAY,GAgBhB,OAdAD,EAAOE,SAAQ,SAACC,EAAOC,GACnB,IAAIC,EAAU,GACdF,EAAME,QAAQH,SAAQ,SAAAI,GAClBD,EAAQE,KAAKD,EAAOpC,SAGxB,IAAIsC,EAAY,CACZC,cAAeN,EAAMO,MAAM9B,OAAO,GAAGC,IACrC8B,SAAUP,EAAI,EACdQ,UAAWT,EAAMjC,KACjB2C,WAAYR,EAAQS,KAAK,OAE7Bb,EAAUM,KAAKC,MAEZP,EAGX,SAASc,EAAsBV,GAC3B,IAAIW,EAAS,GAGbX,EAAQH,SAAQ,SAAAI,GACZA,EAAOU,OAAOd,SAAQ,SAAAe,GAClBD,EAAOT,KAAKU,SAIpB,IAAIC,EAAgB,GAEpBF,EAAOd,SAAQ,SAAAe,GAEX,IAAIE,EAAQH,EAAOI,QAAO,SAASC,EAAGC,GAClC,OAAOD,GAAKC,IAAQL,KACrB,GAECM,EAAe,CACfN,QACAE,SAGJD,EAAcX,KAAKgB,MAIvB,IAAIC,EAAwBN,EAAcO,QAAO,SAACC,EAAEtB,EAAEuB,GAAL,OAASA,EAAEC,WAAU,SAAAC,GAAC,OAAGA,EAAEZ,QAAUS,EAAET,OAASY,EAAEV,QAAQO,EAAEP,WAAUf,KAIvH,OAFAY,EAeJ,SAA+BE,GAC3BY,QAAQC,IAAI,iBAAkBb,GAE9B,IAAIc,EAAc,EAElBd,EAAchB,SAAQ,SAAAqB,GAClBS,GAAeT,EAAaJ,SAGhCW,QAAQC,IAAI,QAASC,GAErB,IAAIC,EAAgB,GAgBpB,OAdAf,EAAchB,SAAQ,SAAAqB,GAClB,IAAIJ,EAAQI,EAAaJ,MACrBe,EAAiBf,EAAQa,EAAf,IAEVG,EAAe,CACflB,MAAOM,EAAaN,MACpBiB,QAAUA,EAAQE,QAAQ,GAC1BjB,MAAMA,GAEVc,EAAc1B,KAAK4B,MAGvBF,EAAcI,KAAKC,GAEZL,EA1CEM,CAAsBf,GAKnC,SAASc,EAASX,EAAGa,GACjB,OAAKC,SAASd,EAAEO,SAAWO,SAASD,EAAEN,UAC5B,EAENO,SAASd,EAAEO,SAAUO,SAASD,EAAEN,SAC3B,EAEF,EAiCJ,SAASQ,IACZ,MAAO,CACH/F,KAAM4C,GAIP,SAASoD,IACZ,MAAO,CACHhG,KAAM4C,GA+CP,SAASvC,EAAQD,GACpB,MAAO,CACHJ,KAAM4C,EACNxC,SC3SR,IAAM6F,EAAarF,YAAW,CAC5BsF,UAAW,CACTC,QAAS,OACTC,eAAgB,SAChBC,gBAAiB,cACjB,WAAY,CACVC,SAAU,GACVC,MAAO,OACPF,gBAAiB,aARJzF,EAWhB,SAACyB,GAAD,OAAW,cAACmE,EAAA,EAAD,2BAAUnE,GAAV,IAAiBoE,kBAAmB,CAAEC,SAAU,gCAExDC,EAAY/F,aAAW,SAACgG,GAAD,MAAY,CACvC/F,KAAM,CACJgG,UAAW,OACXC,cAAe,OACf7F,MAAO,OACP8F,WAAYH,EAAMI,WAAWC,kBAC7BC,SAAUN,EAAMI,WAAWG,QAAQ,IACnCC,YAAaR,EAAMS,QAAQ,GAC3B,UAAW,CACTpG,MAAO,UACPqG,QAAS,OAVG1G,EAad,SAACyB,GAAD,OAAW,cAACkF,EAAA,EAAD,aAAKC,eAAa,GAAKnF,OAEhCoF,EAAYC,aAAW,SAACd,GAAD,MAAY,CACvC/F,KAAM,CACJ8G,SAAU,GAEZC,QAAS,CACPA,QAAS,GAEXC,MAAO,CACLxB,gBAAiBO,EAAMkB,QAAQhH,WAAWiH,OAE5CC,MAAO,CACL3B,gBAAiB,eA0CrB,IAAMhF,EAAiB,CACrB4G,gBDxFK,WACH,OAAO,SAAApI,GACHA,GAoBG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASkG,KACTlD,EAAoBC,sBAAsBvE,GACrCiB,MACG,SAAAN,GACI,IAAIoE,EAAYF,EAAsBlE,EAAKA,KAAKiJ,OAChDtI,EAqOb,SAAiCyD,GACpC,MAAO,CACHtD,KAAM4C,EACNU,aAxOqB8E,CAAwB9E,OAGxC+E,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,UAlC7BP,GAyCG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASmG,KACTnD,EAAoBE,sBAAsBxE,GACrCiB,MACG,SAAAN,GACI,IAAIqJ,EAAYnE,EAAsBlF,EAAKA,KAAKiJ,OAChDtI,EAsNb,SAAiC0I,GACpC,MAAO,CACHvI,KAAM4C,EACN2F,aAzNqBC,CAAwBD,OAGxCF,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,YC8BnCqI,iBDlFK,WACH,OAAO,SAAA5I,GACHA,GAyDG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASkG,KACTlD,EAAoBG,uBAAuBzE,GACtCiB,MACG,SAAAN,GACI,IAAIoE,EAAYF,EAAsBlE,EAAKA,KAAKiJ,OAChDtI,EAuMb,SAAkCyD,GACrC,MAAO,CACHtD,KAAM4C,EACNU,aA1MqBoF,CAAyBpF,OAGzC+E,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,UAvE7BP,GA8EG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASmG,KACTnD,EAAoBI,uBAAuB1E,GACtCiB,MACG,SAAAN,GACI,IAAIqJ,EAAYnE,EAAsBlF,EAAKA,KAAKiJ,OAChDtI,EAwLb,SAAkC0I,GACrC,MAAO,CACHvI,KAAM4C,EACN2F,aA3LqBI,CAAyBJ,OAGzCF,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,YCbnCwI,cD5EK,WACH,OAAO,SAAA/I,GACHA,GA8FG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASkG,KACTlD,EAAoBK,oBAAoB3E,GACnCiB,MACG,SAAAN,GACI,IAAIoE,EAAYF,EAAsBlE,EAAKA,KAAKiJ,OAChDtI,EAyKb,SAA+ByD,GAClC,MAAO,CACHtD,KAAM4C,EACNU,aA5KqBuF,CAAsBvF,OAGtC+E,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,UA5G7BP,GAmHG,SAACA,EAAUqI,GACd,IAAI3J,EAAc2J,IAAWnI,KAAKD,OAAOvB,YAEzCsB,EAASmG,KACTnD,EAAoBM,oBAAoB5E,GACnCiB,MACG,SAAAN,GACI,IAAIqJ,EAAYnE,EAAsBlF,EAAKA,KAAKiJ,OAChDtI,EA0Jb,SAA+B0I,GAClC,MAAO,CACHvI,KAAM4C,EACN2F,aA7JqBO,CAAsBP,OAGtCF,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,aClDrC,IAEe2I,EAFSjH,aAJxB,SAAyBC,GACvB,MAAO,KAGwCV,EAAzBS,EAhDxB,SAAgBO,GACd,IAAM2G,EAAUvB,IADK,EAEKwB,IAAMC,SAAS,GAFpB,mBAEdC,EAFc,KAEPC,EAFO,KAoBrB,OAhBAC,qBAAU,WACM,IAAVF,EACF9G,EAAM4F,kBAEW,IAAVkB,EACP9G,EAAMoG,mBAGNpG,EAAMuG,kBAEP,CAACO,EAAO9G,IAOT,sBAAKC,UAAW0G,EAAQnI,KAAxB,UACE,qBAAKyB,UAAW0G,EAAQnB,MAAxB,SACE,cAACyB,EAAA,EAAD,CAAYhH,UAAW0G,EAAQpB,YAEjC,sBAAKtF,UAAW0G,EAAQhB,MAAxB,UACE,eAAC/B,EAAD,CAAYkD,MAAOA,EAAOI,SAVX,SAACC,EAAOC,GAC3BL,EAASK,IAS6CC,aAAW,sBAA7D,UACE,cAAC/C,EAAD,CAAWgD,MAAM,eACjB,cAAChD,EAAD,CAAWgD,MAAM,kBACjB,cAAChD,EAAD,CAAWgD,MAAM,gBAEnB,cAACL,EAAA,EAAD,CAAYhH,UAAW0G,EAAQpB,mB,oECxEjCgC,GAAkBhJ,aAAW,SAACgG,GAAD,MAAY,CAC7CiD,KAAM,CACJxD,gBAAiB,UACjBpF,MAAO2F,EAAMkB,QAAQgC,OAAOC,MAC5BC,aAAc,6BAEhBC,KAAM,CACJhJ,MAAO,QACPiG,SAAU,GACV8C,aAAc,gCATMpJ,CAWpBsJ,MAEEC,GAAiBvJ,aAAW,SAACgG,GAAD,MAAY,CAC5C/F,KAAM,CACJuJ,WAAY,6BACZ,qBAAsB,CACpB/D,gBAAiBO,EAAMkB,QAAQuC,OAAOC,OAExC,UAAW,CACTjE,gBAAiB,eAPAzF,CAUnB2J,MAOJ,IAAM9C,GAAYC,YAAW,CAC3B8C,MAAO,CACL1J,WAAY,UACZ2J,SAAU,IACVC,WAAY,GAEdC,MAAO,CACL1J,MAAO,QACP2J,aAAc,MAgElB,IAEeC,GAFmB/I,aAVlC,SAAyBC,GACvB,OAAmC,MAA/BA,EAAM+I,YAAYxH,UACb,CAAEyH,OAAQ,KAGjB5F,QAAQC,IAAIrD,EAAM+I,YAAYxH,WACvB,CAAEyH,OAAQhJ,EAAM+I,YAAYxH,cAILxB,EA5DlC,SAA0BO,GACxB,IAAM2G,EAAUvB,KADe,EAGPyB,mBAAS,IAHF,mBAGxB8B,EAHwB,KAGlBC,EAHkB,KAmB/B,OAdA5B,qBAAU,WACR,IAAI6B,EAAM,GACU,MAAhB7I,EAAM0I,SACR1I,EAAM0I,OAAOxH,SAAQ,SAAA4H,GAzB3B,IAAoBC,EAAKC,EAAI9J,EAAMoC,EA0B3BuH,EAAItH,MA1BQwH,EA0BQD,EAAKrH,cA1BRuH,EA0BuBF,EAAKnH,SA1BxBzC,EA0BkC4J,EAAKlH,UA1BjCN,EA0B4CwH,EAAKjH,WAzB3E,CAAEkH,MAAKC,KAAI9J,OAAMoC,eA2BpBsH,EAAQC,MAET,CAAC7I,EAAM0I,SAOR,sBAAKO,MAAO,CAAEZ,WAAY,QAASa,WAAY,OAAQnE,YAAa,QAApE,UACE,4CACA,cAACoE,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOnJ,UAAW0G,EAAQwB,MAAOkB,KAAK,QAAQhC,aAAW,mBAAzD,UACE,cAACiC,GAAA,EAAD,CAAWrJ,UAAU,aAArB,SACE,eAACiI,GAAA,EAAD,WACE,cAACX,GAAD,IACA,cAACA,GAAD,CAAiBgC,MAAM,WACvB,cAAChC,GAAD,oBACA,cAACA,GAAD,0BAGJ,cAACiC,GAAA,EAAD,CAAWvJ,UAAU,aAArB,SACG0I,EAAKc,KAAI,SAACC,GAAD,OACR,eAAC5B,GAAD,WACE,cAACP,GAAD,CAAiBtH,UAAU,YAAYsJ,MAAM,OAA7C,SAAqD,qBAAKlJ,IAAKqJ,EAAIX,IAAKY,IAAI,OAC5E,cAACpC,GAAD,CAAiBgC,MAAM,SAAvB,SAAkCG,EAAIV,KACtC,cAACzB,GAAD,CAAiBqC,UAAU,KAAKC,MAAM,MAAtC,SACGH,EAAIxK,OAEP,cAACqI,GAAD,CAAiBtH,UAAU,eAA3B,SAA2CyJ,EAAIpI,WAN5BoI,EAAIxK,sB,2BCDvC,IACe4K,GADQrK,aANvB,SAAyBC,GACrB,MAAO,CACHuC,MAAOvC,EAAM+I,YAAYvC,aAIVzG,EA/ET,SAACO,GAAW,IAAD,EACO6G,mBAAS,IADhB,mBACdkD,EADc,KACNC,EADM,OAESnD,mBAAS,IAFlB,mBAEd3D,EAFc,KAEL+G,EAFK,KAKrBjD,qBAAU,WACN,IAAIkD,EAAW,GACXC,EAAa,GACE,MAAfnK,EAAMiC,QACNjC,EAAMiC,MAAMf,SAAQ,SAAA4H,GAChBoB,EAAS3I,KAAKuH,EAAK7G,OACnBkI,EAAW5I,KAAKuH,EAAK3G,UAEzB6H,EAAUE,GACVD,EAAWE,MAEhB,CAACnK,EAAMiC,QAEV,IAAImI,EAAU,CACVC,OAAQnH,EACRoH,MAAO,CACHpG,MAAO,IACPvG,KAAM,SAEV4M,OAAQR,EACRS,KAAM,CACFvF,QAAS,GAGbwF,MAAO,CACHC,MAAM,GAEVC,OAAQ,CACJhJ,SAAU,QACV4I,OAAQ,CAAEK,OAAQ,CAAC,SACnB1G,MAAO,KAEX2G,YAAa,CACTC,UAAW,CACPC,MAAO,CACHC,YAAa,KAIzBzG,MAAO,CACH0G,WAAY,CACRC,SAAS,EACTC,QAAS,QACTC,eAAgB,MAK5B,OACI,sBAAKnC,MAAO,CAAEZ,WAAY,OAASa,WAAY,OAAQnE,YAAa,OAAQwD,aAAa,QAAzF,UACI,oBAAIU,MAAO,CAAErK,MAAO,SAApB,wBACA,8EACA,qBAAKqB,UAAU,mBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,cAAC,KAAD,CACImK,QAASA,EACTC,OAAQD,EAAQC,OAChB1M,KAAMyM,EAAQE,MAAM3M,KACpBuG,MAAOkG,EAAQE,MAAMpG,oB,OC/ClCmH,OAff,WACI,OACI,gCACI,eAACC,EAAA,EAAD,CAAQC,UAAW,EAAGtC,MAAO,CAAExK,WAAY,UAAWkD,SAAU,SAAWA,SAAS,SAApF,UACI,cAAC6J,EAAA,EAAD,UACI,cAAC,EAAD,MAEJ,cAAC,EAAD,OAEJ,cAAC,GAAD,IACA,cAAC,GAAD,Q,OCGZ,IAAMxM,GAAiB,CACnB1C,cVlBG,WACH,OAAO,SAAAkB,GACHA,EAASW,KACTnC,EAAaM,mBUwBrB,IAEemP,GAFYhM,aAN3B,SAAyBC,GACrB,MAAO,CACHgM,SAAUhM,EAAMK,GAAG2L,YAIyB1M,GAAzBS,EAzB3B,SAAmBO,GACf,OAAIA,EAAM0L,SACC,cAAC,IAAD,CAAUC,GAAG,UAGpB,qBAAK1L,UAAU,sBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,WAAd,uBACA,cAAC,EAAD,CAAcC,QAAQ,WAAWmJ,KAAK,QAAQzK,MAAM,YAAY0B,QAAS,kBAAMN,EAAM1D,iBAArF,iCACA,mBAAG2M,MAAO,CAACrK,MAAO,WAAlB,mE,SCUhB,IAEegN,GAFenM,aAN9B,SAAyBC,GACrB,MAAO,CACLhC,KAAMgC,EAAMhC,KAAKD,UAIOgC,EAtBT,SAAC,GAAuC,IAA1BoM,EAAyB,EAApCjC,UAAyBkC,EAAW,8BAE1D,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAU,OAChBF,EAAKpO,KACH,cAACmO,EAAD,eAAeG,IAEf,cAAC,IAAD,CAAUL,GAAI,CAAEM,SAAU,SAAUvM,MAAO,CAAEwM,KAAMF,EAAWG,oBCuCxE,IAAMnN,GAAiB,CACnBrC,eZzCG,SAAwBC,GAC3B,OAAO,SAAAY,GACHA,EAASW,KACTnC,EAAaW,eAAeC,GACvBO,MACG,SAAAM,GACI,IAAIvB,EAAcuB,EAAOZ,KAAKuP,aAC1B7O,EAAeE,EAAOZ,KAAKwP,cAE/BhN,aAAaC,QAAQ,eAAgBpD,GACrCmD,aAAaC,QAAQ,gBAAiB/B,GACtCC,EAASF,EAAiBpB,EAAaqB,OAG9CyI,OAAM,SAAUjI,GACTA,EAAMkI,SACNzI,EAASQ,EAAQD,EAAMkI,WAEvBzI,EAASQ,EAAQD,UY4BtBuO,GAFW7M,aAX1B,SAAyBC,GACrB,MAAO,CACHhC,KAAMgC,EAAMhC,KAAKA,KACjBgO,SAAUhM,EAAMK,GAAG2L,YAQwB1M,GAAzBS,EA7B1B,SAAkBO,GAWd,OAVAgH,qBAAU,WACN,IAAKhH,EAAMtC,KAAM,CACb,IAAImC,EAzBhB,SAAkBA,GACd,IAEI0M,EAASC,EAAOpL,EAFhBqL,EAASC,SAASC,cAAc,KAChCC,EAAe,GAInB,IAFAH,EAAOI,KAAOhN,EACd0M,EAAUE,EAAOK,OAAOC,QAAQ,MAAO,IAAIP,MAAM,KAC5CpL,EAAI,EAAGA,EAAImL,EAAQS,OAAQ5L,IAE5BwL,GADAJ,EAAQD,EAAQnL,GAAGoL,MAAM,MACN,IAAMS,mBAAmBT,EAAM,IAEtD,MAAO,CACHU,SAAUT,EAAOS,SACjBC,KAAMV,EAAOU,KACbC,SAAUX,EAAOW,SACjBC,KAAMZ,EAAOY,KACbpB,SAAUQ,EAAOR,SACjBa,OAAQL,EAAOK,OACfQ,OAAQV,EACRW,KAAMd,EAAOc,MAOCC,CAASjR,OAAO4P,SAASU,MAE/BhN,EAAIyN,OAAO1Q,MACXoD,EAAMrD,eAAekD,EAAIyN,OAAO1Q,SAGzC,CAACoD,IAEAA,EAAM0L,SACC,cAAC,IAAD,CAAUC,GAAG,UAEb,cAAC,IAAD,CAAUA,GAAG,cCH5B,IAAM3M,GAAiB,CACrB1B,oBAWF,IAEemQ,GAFMhO,aARrB,SAAyBC,GACvB,MAAO,CACL7C,KAAM6C,EAAMhC,KAAKA,KACjBA,KAAMgC,EAAMhC,KAAKD,OACjBiO,SAAUhM,EAAMK,GAAG2L,YAIuB1M,GAAzBS,EArCrB,SAAaO,GASX,OARAgH,qBAAU,WACR,IAAM9K,EAAcmD,aAAaqO,QAAQ,gBACnCnQ,EAAe8B,aAAaqO,QAAQ,kBACrC1N,EAAMtC,MAAQxB,GAAeqB,GAChCyC,EAAM1C,iBAAiBpB,EAAaqB,KAErC,CAACyC,IAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2N,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,QAAQhE,UAAWyB,KACtC,cAAC,IAAD,CAAOuC,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,GAAD,YCpBYC,QACW,cAA7BtR,OAAO4P,SAASiB,UAEe,UAA7B7Q,OAAO4P,SAASiB,UAEhB7Q,OAAO4P,SAASiB,SAASU,MACvB,2D,+BCfFC,GAAe,CACfjO,UAAW,SACX4L,UAAU,GAsBCsC,OAnBf,WAAkD,IAA/BtO,EAA8B,uDAAtBqO,GAAc/F,EAAQ,uCAC7C,OAAQA,EAAOrK,MACX,KAAKP,eAAY+B,eACb,OAAO,2BACAO,GADP,IAEII,UAAWkI,EAAO9I,OAE1B,KAAK9B,eAAYU,SACb,OAAO,2BACA4B,GADP,IAEIgM,UAAWhM,EAAMgM,WAErB,KAAKrO,iBAAckC,oBACf,OAAOwO,GACf,QACI,OAAOrO,ICrBfqO,GAAe,GA6BJE,GA1BK,WAAmC,IAAlCvO,EAAiC,uDAAzBqO,GAAc/F,EAAW,uCAClD,OAAQA,EAAOrK,MACX,KAAKN,iBAAce,iBACf,MAAO,CACH8P,YAAY,GAEpB,KAAK7Q,iBAAcY,sBACf,MAAO,CACHR,OAAQuK,EAAOvK,QAEvB,KAAKJ,iBAAcO,oBACf,OAAO,2BACA8B,GADP,IAEIhC,KAAMsK,EAAOtK,OAErB,KAAKL,iBAAcgB,iBACf,MAAO,CACHN,MAAOiK,EAAOjK,OAEtB,KAAKV,iBAAckC,oBACf,OAAOwO,GACX,QACI,OAAOrO,ICzBfqO,GAAe,CACfI,qBAAqB,EACrBC,qBAAqB,GA4DVC,GAzDY,WAAmC,IAAlC3O,EAAiC,uDAAzBqO,GAAc/F,EAAW,uCACzD,OAAQA,EAAOrK,MACX,KAAK4C,EACD,OAAO,2BACAb,GADP,IAEIyO,qBAAqB,IAE7B,KAAK5N,EACD,OAAO,2BACAb,GADP,IAEI0O,qBAAqB,IAE7B,KAAK7N,EACD,MAAO,CACHxC,MAAOiK,EAAOjK,OAEtB,KAAKwC,EACD,OAAO,2BACAb,GADP,IAEIyO,qBAAqB,EACrBlN,UAAW+G,EAAO/G,YAE1B,KAAKV,EACD,OAAO,2BACAb,GADP,IAEI0O,qBAAqB,EACrBlI,UAAW8B,EAAO9B,YAE1B,KAAK3F,EACD,OAAO,2BACAb,GADP,IAEIyO,qBAAqB,EACrBlN,UAAW+G,EAAO/G,YAE1B,KAAKV,EACD,OAAO,2BACAb,GADP,IAEI0O,qBAAqB,EACrBlI,UAAW8B,EAAO9B,YAE1B,KAAK3F,EACD,OAAO,2BACAb,GADP,IAEIyO,qBAAqB,EACrBlN,UAAW+G,EAAO/G,YAE1B,KAAKV,EACD,OAAO,2BACAb,GADP,IAEI0O,qBAAqB,EACrBlI,UAAW8B,EAAO9B,YAE1B,QACI,OAAOxG,ICjDJ4O,GANEC,aAAgB,CAC7BxO,GAAIyO,GACJ9Q,KAAMuQ,GACNxF,YAAa4F,K,SCHXI,GAAmBlS,OAAOmS,sCAAwCC,KAYzDC,GATDC,aACVP,GACAG,GACIK,aACIC,Q,SCHZC,IAASjD,OACP,cAAC,IAAD,CAAU6C,MAAOA,GAAjB,SACI,cAAC,KAAD,CAAYK,SAAS,IAArB,SACE,cAAC,GAAD,QAGNvC,SAASwC,eAAe,SNoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlS,MAAK,SAAAmS,GACJA,EAAaC,gBAEdvJ,OAAM,SAAAjI,GACL+E,QAAQ/E,MAAMA,EAAMyR,a,gCOzI5B,qDAAO,IAAMnS,EAAgB,CACzBe,iBAAkB,wBAClBR,oBAAqB,2BACrBS,iBAAkB,wBAClBkB,oBAAqB,2BACrBtB,sBAAuB,+B,gCCL3B,mDAAO,IAAMb,EAAc,CACvB+B,eAAgB,oBAChBrB,SAAU,gB","file":"static/js/main.5c1c9f04.chunk.js","sourcesContent":["import axios from \"axios\";\r\nrequire('dotenv').config()\r\nconst querystring = require(\"querystring\");\r\n\r\nexport const userServices = {\r\n    getUserInfo,\r\n    authorizeUser,\r\n    getAccessToken\r\n};\r\n\r\nfunction authorizeUser() {\r\n    const clientID = \"aef81b01d4254ec195e10e20a46aa47e\";\r\n    const scopes = \"user-read-email user-top-read\";\r\n    const redirect_uri = process.env.REACT_APP_REDIRECT_URI;\r\n\r\n    window.open(\"https://accounts.spotify.com/authorize\" +\r\n        \"?client_id=\" + clientID +\r\n        \"&response_type=code\" +\r\n        \"&redirect_uri=\" + encodeURIComponent(redirect_uri) +\r\n        \"&scope=\" + encodeURIComponent(scopes),\r\n        \"_self\"\r\n    );\r\n}\r\n\r\nfunction getAccessToken(code) {\r\n    const data = querystring.stringify({\r\n        client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n        client_secret: process.env.REACT_APP_SPOTIFY_SECRET,\r\n        redirect_uri: process.env.REACT_APP_REDIRECT_URI,\r\n        \"grant_type\": \"authorization_code\",\r\n        code: code,\r\n    })\r\n\r\n    const headers = {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    }\r\n\r\n    return (axios.post(\"https://accounts.spotify.com/api/token\", data, {\r\n        headers\r\n    })).then()\r\n}\r\n\r\n\r\nfunction getUserInfo(accessToken) {\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me\", {\r\n        headers\r\n    })\r\n}","const { uiConstants } = require(\"../constants/uiConstants\");\r\n\r\nexport function setPageTitle(name) {\r\n    return dispatch => {\r\n        dispatch({ type: uiConstants.SET_PAGE_TITLE, name })\r\n    };\r\n}\r\n\r\nexport function logUser() {\r\n    return dispatch => {\r\n        dispatch({ type: uiConstants.LOG_USER })\r\n    };\r\n}","import { userServices } from \"../services/userServices\";\r\nimport { logUser } from \"../actions/uiActions\";\r\n\r\nconst { userConstants } = require(\"../constants/userConstants\");\r\n\r\nexport function authorizeUser() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        userServices.authorizeUser();\r\n    }\r\n}\r\n\r\nexport function getAccessToken(code) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        userServices.getAccessToken(code)\r\n            .then(\r\n                tokens => {\r\n                    var accessToken = tokens.data.access_token;\r\n                    var refreshToken = tokens.data.refresh_token;\r\n\r\n                    localStorage.setItem('access_token', accessToken);\r\n                    localStorage.setItem('refresh_token', refreshToken);\r\n                    dispatch(authenticateUser(accessToken, refreshToken));\r\n                },\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function authenticateUser(accessToken, refreshToken) {\r\n    return (dispatch) => {\r\n        const tokens = {\r\n            accessToken,\r\n            refreshToken\r\n        }\r\n        dispatch(getUserInfo(accessToken));\r\n        dispatch(storeTokens(tokens));\r\n    }\r\n}\r\n\r\nexport function getUserInfo(accessToken) {\r\n    return dispatch => {\r\n        userServices.getUserInfo(accessToken)\r\n            .then(\r\n                user => {\r\n                    dispatch(storeUser(user.data))\r\n                    dispatch(logUser());\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport function request() {\r\n    return {\r\n        type: userConstants.LOG_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport function storeTokens(tokens) {\r\n    return {\r\n        type: userConstants.LOG_USER_STORE_TOKENS,\r\n        tokens\r\n    }\r\n}\r\n\r\nexport function storeUser(user) {\r\n    return {\r\n        type: userConstants.LOG_USER_STORE_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport function failure(error) {\r\n    return {\r\n        type: userConstants.LOG_USER_FAILURE,\r\n        error\r\n    }\r\n}\r\n\r\nexport function disconnectUser() {\r\n    localStorage.setItem('access_token', \"\");\r\n    localStorage.setItem('refresh_token', \"\");\r\n    return {\r\n        type: userConstants.LOG_USER_DISCONNECT\r\n    }\r\n}","import { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #74a585 30%, #1ed760 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        \"&:hover\": {\r\n            border: \"none\",\r\n            boxShadow: '5px 5px 7px 2px rgba(255, 105, 135, .3)',\r\n        }\r\n    }\r\n})(Button);\r\n\r\nexport default StyledButton;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './navbar.css'\r\nimport StyledButton from \"./StyledButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setPageTitle } from \"../redux/actions/uiActions\";\r\nimport { disconnectUser } from \"../redux/actions/userActions\";\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div><h1 className=\"logo\">Tasteify</h1></div>\r\n            <StyledButton className=\"button\" variant=\"outlined\" color=\"primary\"\r\n                startIcon={<Avatar src={props.userImage} />}\r\n                onClick={() => props.disconnectUser()}>\r\n                Disconnect\r\n                        </StyledButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actionCreators = {\r\n    setPageTitle: setPageTitle,\r\n    disconnectUser\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    var userImage = null;\r\n    if (state.user.user && state.user.user.images[0]) {\r\n        userImage = state.user.user.images[0].url\r\n    }\r\n\r\n    return {\r\n        pageTitle: state.ui.pageTitle,\r\n        userImage\r\n    }\r\n}\r\n\r\nconst connectedTopBar = connect(mapStateToProps, actionCreators)(NavBar);\r\n\r\n// <h1 variant=\"title\"\r\n// style={{ color: '#1ed760' }}\r\n// >\r\n// Tasteify\r\n// </h1>\r\n\r\nexport default connectedTopBar;","export const spotifyDataConstants = {\r\n    SPOTIFY_DATA_TRACK_REQUEST: \"SPOTIFY_DATA_TRACK_REQUEST\",\r\n    SPOTIFY_DATA_GENRE_REQUEST: \"SPOTIFY_DATA_GENRE_REQUEST\",\r\n    SPOTIFY_DATA_FAILURE: \"SPOTIFY_DATA_FAILURE\",\r\n    SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_MONTH: \"SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_MONTH\",\r\n    SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_6_MONTH: \"SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_6_MONTH\",\r\n    SPOTIFY_DATA_STORE_TOP_TRACKS_ALL_TIME: \"SPOTIFY_DATA_STORE_TOP_TRACKS_ALL_TIME\",\r\n    SPOTIFY_DATA_STORE_TOP_GENRES_LAST_MONTH: \"SPOTIFY_DATA_STORE_TOP_GENRES_LAST_MONTH\",\r\n    SPOTIFY_DATA_STORE_TOP_GENRES_LAST_6_MONTH: \"SPOTIFY_DATA_STORE_TOP_GENRES_LAST_6_MONTH\",\r\n    SPOTIFY_DATA_STORE_TOP_GENRES_ALL_TIME: \"SPOTIFY_DATA_STORE_TOP_GENRES_ALL_TIME\"\r\n}","import axios from \"axios\";\r\n\r\nexport const spotifyDataServices = {\r\n    getTopTracksLastMonth,\r\n    getTopGenresLastMonth,\r\n    getTopTracksLast6Month,\r\n    getTopGenresLast6Month,\r\n    getTopTracksAllTime,\r\n    getTopGenresAllTime\r\n}\r\n\r\nfunction getTopTracksLastMonth(accessToken) {\r\n\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=short_term\", {\r\n        headers\r\n    })\r\n}\r\n\r\nfunction getTopGenresLastMonth(accessToken) {\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/artists?limit=50&time_range=short_term\", {\r\n        headers\r\n    })\r\n}\r\n\r\nfunction getTopTracksLast6Month(accessToken) {\r\n\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=medium_term\", {\r\n        headers\r\n    })\r\n}\r\n\r\nfunction getTopGenresLast6Month(accessToken) {\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/artists?limit=50&time_range=medium_term\", {\r\n        headers\r\n    })\r\n}\r\n\r\nfunction getTopTracksAllTime(accessToken) {\r\n\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=long_term\", {\r\n        headers\r\n    })\r\n}\r\n\r\nfunction getTopGenresAllTime(accessToken) {\r\n    const headers = {\r\n        \"Authorization\": \"Bearer \" + accessToken\r\n    }\r\n\r\n    return axios.get(\"https://api.spotify.com/v1/me/top/artists?limit=50&time_range=long_term\", {\r\n        headers\r\n    })\r\n}\r\n","import { spotifyDataConstants } from \"../constants/spotifyDataConstants\";\r\nimport { spotifyDataServices } from \"../services/spotifyDataServices\";\r\n\r\nexport function getTopLastMonth() {\r\n    return dispatch => {\r\n        dispatch(getTopTracksLastMonth())\r\n        dispatch(getTopGenresLastMonth())\r\n    }\r\n}\r\n\r\nexport function getTopLast6Month() {\r\n    return dispatch => {\r\n        dispatch(getTopTracksLast6Month())\r\n        dispatch(getTopGenresLast6Month())\r\n    }\r\n}\r\n\r\nexport function getTopAllTime() {\r\n    return dispatch => {\r\n        dispatch(getTopTracksAllTime())\r\n        dispatch(getTopGenresAllTime())\r\n    }\r\n}\r\n\r\nfunction getTopTracksLastMonth() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topTrackRequest());\r\n        spotifyDataServices.getTopTracksLastMonth(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topTracks = extractFavoriteTracks(data.data.items);\r\n                    dispatch(storeTopTracksLastMonth(topTracks))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction getTopGenresLastMonth() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topGenreRequest());\r\n        spotifyDataServices.getTopGenresLastMonth(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topGenres = extractFavoriteGenres(data.data.items);\r\n                    dispatch(storeTopGenresLastMonth(topGenres))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction getTopTracksLast6Month() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topTrackRequest());\r\n        spotifyDataServices.getTopTracksLast6Month(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topTracks = extractFavoriteTracks(data.data.items);\r\n                    dispatch(storeTopTracksLast6Month(topTracks))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction getTopGenresLast6Month() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topGenreRequest());\r\n        spotifyDataServices.getTopGenresLast6Month(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topGenres = extractFavoriteGenres(data.data.items);\r\n                    dispatch(storeTopGenresLast6Month(topGenres))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction getTopTracksAllTime() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topTrackRequest());\r\n        spotifyDataServices.getTopTracksAllTime(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topTracks = extractFavoriteTracks(data.data.items);\r\n                    dispatch(storeTopTracksAllTime(topTracks))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction getTopGenresAllTime() {\r\n    return (dispatch, getState) => {\r\n        var accessToken = getState().user.tokens.accessToken;\r\n\r\n        dispatch(topGenreRequest());\r\n        spotifyDataServices.getTopGenresAllTime(accessToken)\r\n            .then(\r\n                data => {\r\n                    var topGenres = extractFavoriteGenres(data.data.items);\r\n                    dispatch(storeTopGenresAllTime(topGenres))\r\n                }\r\n            )\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    dispatch(failure(error.response))\r\n                } else {\r\n                    dispatch(failure(error))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction extractFavoriteTracks(tracks) {\r\n    var topTracks = [];\r\n    // console.log(\"TRACKS\", tracks);\r\n    tracks.forEach((track, i) => {\r\n        var artists = [];\r\n        track.artists.forEach(artist => {\r\n            artists.push(artist.name)\r\n        })\r\n\r\n        var trackInfo = {\r\n            albumCoverURL: track.album.images[2].url,\r\n            position: i + 1,\r\n            trackName: track.name,\r\n            artistName: artists.join(\", \")\r\n        }\r\n        topTracks.push(trackInfo);\r\n    });\r\n    return topTracks;\r\n}\r\n\r\nfunction extractFavoriteGenres(artists) {\r\n    var genres = [];\r\n\r\n    //Extract all genres\r\n    artists.forEach(artist => {\r\n        artist.genres.forEach(genre => {\r\n            genres.push(genre);\r\n        })\r\n    })\r\n\r\n    var countedGenres = []\r\n    //Loop though each genres\r\n    genres.forEach(genre => {\r\n        //Get the number of occurences of this genre\r\n        var count = genres.reduce(function(n, val) {\r\n            return n + (val === genre)\r\n        }, 0)\r\n\r\n        var countedGenre = {\r\n            genre,\r\n            count\r\n        }\r\n        \r\n        countedGenres.push(countedGenre);\r\n    })\r\n\r\n    // Remove all duplicates (archi dégueu :p)\r\n    var filteredCountedGenres = countedGenres.filter((v,i,a)=>a.findIndex(t=>(t.genre === v.genre && t.count===v.count))===i)\r\n    \r\n    genres = getPercentageOfGenres(filteredCountedGenres);\r\n\r\n    return genres;\r\n}\r\n\r\nfunction compare( a, b ) {\r\n    if ( parseInt(a.percent) > parseInt(b.percent) ){\r\n      return -1;\r\n    }\r\n    if (parseInt(a.percent) <parseInt(b.percent)){\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\nfunction getPercentageOfGenres(countedGenres) {\r\n    console.log(\"COUNTED GENRES\", countedGenres);\r\n\r\n    var totalGenres = 0;\r\n    // Get total number of genres\r\n    countedGenres.forEach(countedGenre => {\r\n        totalGenres += countedGenre.count;\r\n    })\r\n\r\n    console.log(\"TOTAL\", totalGenres);\r\n\r\n    var percentGenres = [];\r\n    // make a % of genres\r\n    countedGenres.forEach(countedGenre => {\r\n        var count = countedGenre.count;\r\n        var percent = 100 * (count / totalGenres);\r\n\r\n        var percentGenre = {\r\n            genre: countedGenre.genre,\r\n            percent : percent.toFixed(0),\r\n            count:count\r\n        }\r\n        percentGenres.push(percentGenre);\r\n    })\r\n\r\n    percentGenres.sort(compare);\r\n\r\n    return percentGenres;\r\n}\r\n\r\nexport function topTrackRequest() {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_TRACK_REQUEST\r\n    }\r\n}\r\n\r\nexport function topGenreRequest() {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_GENRE_REQUEST\r\n    }\r\n}\r\n\r\nexport function storeTopTracksLastMonth(topTracks) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_MONTH,\r\n        topTracks\r\n    }\r\n}\r\n\r\nexport function storeTopGenresLastMonth(topGenres) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_LAST_MONTH,\r\n        topGenres\r\n    }\r\n}\r\n\r\nexport function storeTopTracksLast6Month(topTracks) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_6_MONTH,\r\n        topTracks\r\n    }\r\n}\r\n\r\nexport function storeTopGenresLast6Month(topGenres) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_LAST_6_MONTH,\r\n        topGenres\r\n    }\r\n}\r\n\r\nexport function storeTopTracksAllTime(topTracks) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_ALL_TIME,\r\n        topTracks\r\n    }\r\n}\r\n\r\nexport function storeTopGenresAllTime(topGenres) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_ALL_TIME,\r\n        topGenres\r\n    }\r\n}\r\n\r\n\r\nexport function failure(error) {\r\n    return {\r\n        type: spotifyDataConstants.SPOTIFY_DATA_FAILURE,\r\n        error\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { getTopLastMonth, getTopLast6Month, getTopAllTime } from \"../redux/actions/spotifyDataActions\";\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > span': {\r\n      maxWidth: 40,\r\n      width: '100%',\r\n      backgroundColor: '#1ED760'\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    marginTop: '20px',\r\n    textTransform: 'none',\r\n    color: '#fff',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginRight: theme.spacing(1),\r\n    '&:focus': {\r\n      color: '#1ED760',\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: 0,\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#181717',\r\n  },\r\n}));\r\n\r\nfunction SubNav(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (value === 0) {\r\n      props.getTopLastMonth();\r\n    }\r\n    else if (value === 1) {\r\n      props.getTopLast6Month();\r\n    }\r\n    else {\r\n      props.getTopAllTime();\r\n    }\r\n  }, [value, props])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <Typography className={classes.padding} />\r\n      </div>\r\n      <div className={classes.demo2}>\r\n        <StyledTabs value={value} onChange={handleChange} aria-label=\"styled tabs example\">\r\n          <StyledTab label=\"Last Month\" />\r\n          <StyledTab label=\"Last 6 Months\" />\r\n          <StyledTab label=\"All Time\" />\r\n        </StyledTabs>\r\n        <Typography className={classes.padding} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst actionCreators = {\r\n  getTopLastMonth,\r\n  getTopLast6Month,\r\n  getTopAllTime\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {}\r\n}\r\n\r\nconst connectedSubNav = connect(mapStateToProps, actionCreators)(SubNav);\r\n\r\nexport default connectedSubNav","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport \"./tabtracks.css\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#181717',\r\n    color: theme.palette.common.white,\r\n    borderBottom: \"1px solid rgb(42, 36, 36)\",\r\n  },\r\n  body: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    borderBottom: \"1px solid rgb(42, 36, 36)\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    transition: \"background-color 0.3s ease\",\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0d0d0d\",\r\n    }\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(img, nb, name, artist) {\r\n  return { img, nb, name, artist };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    background: \"#181717\",\r\n    minWidth: 700,\r\n    paddingTop: 0,\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    marginBottom: 16\r\n  }\r\n});\r\n\r\nfunction CustomizedTables(props) {\r\n  const classes = useStyles();\r\n\r\n  const [rows, setrows] = useState([])\r\n\r\n  useEffect(() => {\r\n    var tmp = []\r\n    if (props.jsdata != null) {\r\n      props.jsdata.forEach(line => {\r\n        tmp.push(createData(line.albumCoverURL, line.position, line.trackName, line.artistName));\r\n      });\r\n      setrows(tmp);\r\n    }\r\n  }, [props.jsdata])\r\n\r\n  // const rows = [\r\n  //   createData(props.jsdata[0].albumCoverURL, '1', 'Track 1', 'Artist 1'),\r\n  // ];\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"160px\", marginLeft: \"24px\", marginRight: \"24px\" }}>\r\n      <h2>Top Tracks</h2>\r\n      <TableContainer>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n          <TableHead className=\"table-head\">\r\n            <TableRow>\r\n              <StyledTableCell></StyledTableCell>\r\n              <StyledTableCell align=\"center\"></StyledTableCell>\r\n              <StyledTableCell>Track</StyledTableCell>\r\n              <StyledTableCell>Artist</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody className=\"table-body\">\r\n            {rows.map((row) => (\r\n              <StyledTableRow key={row.name}>\r\n                <StyledTableCell className=\"table-img\" align=\"left\" ><img src={row.img} alt=\"\" /></StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row.nb}</StyledTableCell>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </StyledTableCell>\r\n                <StyledTableCell className=\"table-artist\">{row.artist}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  if (state.spotifyData.topTracks == null) {\r\n    return { jsdata: [] }\r\n  }\r\n  else {\r\n    console.log(state.spotifyData.topTracks);\r\n    return { jsdata: state.spotifyData.topTracks }\r\n  }\r\n}\r\n\r\nconst connectedCustomizedTables = connect(mapStateToProps)(CustomizedTables);\r\n\r\nexport default connectedCustomizedTables\r\n","import React, { useEffect, useState } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport { connect } from \"react-redux\";\r\nimport './Genres.css'\r\n\r\n\r\n\r\nconst Graph = (props) => {\r\n    const [gender, setgender] = useState([])\r\n    const [percent, setpercent] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        var tmpgenre = []\r\n        var tmpourcent = []\r\n        if (props.genre != null) {\r\n            props.genre.forEach(line => {\r\n                tmpgenre.push(line.genre)\r\n                tmpourcent.push(line.count)\r\n            });\r\n            setgender(tmpgenre);\r\n            setpercent(tmpourcent);\r\n        }\r\n    }, [props.genre])\r\n\r\n    var options = {\r\n        series: percent,\r\n        chart: {\r\n            width: 800,\r\n            type: 'donut'\r\n        },\r\n        labels: gender,\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n\r\n        yaxis: {\r\n            show: false\r\n        },\r\n        legend: {\r\n            position: 'right',\r\n            labels: { colors: ['#fff'] },\r\n            width: 180\r\n        },\r\n        plotOptions: {\r\n            polarArea: {\r\n                rings: {\r\n                    strokeWidth: 0\r\n                }\r\n            }\r\n        },\r\n        theme: {\r\n            monochrome: {\r\n                enabled: false,\r\n                shadeTo: 'light',\r\n                shadeIntensity: 0.6\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ paddingTop: \"55px\" , marginLeft: \"20px\", marginRight: \"20px\", marginBottom:\"20px\" }}>\r\n            <h2 style={{ color: \"white\"}}>Top Genres</h2>\r\n            <p>Based on the genres of your favorites artists</p>\r\n            <div className=\"genres-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"donut\">\r\n                        <Chart\r\n                            options={options}\r\n                            series={options.series}\r\n                            type={options.chart.type}\r\n                            width={options.chart.width}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        genre: state.spotifyData.topGenres\r\n    }\r\n}\r\n\r\nconst connectedGraph = connect(mapStateToProps)(Graph);\r\nexport default connectedGraph;","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport NavBar from '../navbar';\r\nimport SubNav from '../subnav';\r\nimport BasicTable from '../tabtracks';\r\nimport Graph from '../Genres';\r\nimport \"./HomePage.css\"\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n            <AppBar elevation={1} style={{ background: '#0d0d0d', position: \"fixed\" }} position=\"static\">\r\n                <Toolbar>\r\n                    <NavBar></NavBar>\r\n                </Toolbar>\r\n                <SubNav></SubNav>\r\n            </AppBar>\r\n            <BasicTable></BasicTable>\r\n            <Graph></Graph>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from 'react';\r\nimport \"./NotLogged.css\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { authorizeUser } from '../../redux/actions/userActions';\r\nimport StyledButton from \"../StyledButton\";\r\n\r\nfunction NotLogged(props) {\r\n    if (props.isLogged) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n    return (\r\n        <div className=\"NotLogged-Container\">\r\n            <div className=\"NotLogged-Content\">\r\n                <h1 className=\"logo big\"> Tasteify</h1>\r\n                <StyledButton variant=\"outlined\" size=\"large\" color=\"secondary\" onClick={() => props.authorizeUser()}>Log in with Spotify</StyledButton>\r\n                <p style={{color: \"#BFBFBF\"}}>Made by Quentin Floricourt and Brice Deguigne</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actionCreators = {\r\n    authorizeUser\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLogged: state.ui.isLogged\r\n    }\r\n}\r\n\r\nconst connectedNotLogged = connect(mapStateToProps, actionCreators)(NotLogged);\r\n\r\nexport default connectedNotLogged;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        rest.user ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/login', state: { from: routeProps.location } }} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      user: state.user.tokens\r\n    }\r\n  }\r\n\r\nconst connectedPrivateRoute = connect(mapStateToProps)(PrivateRoute);\r\n\r\nexport default connectedPrivateRoute;","import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport { getAccessToken } from '../redux/actions/userActions';\r\n\r\nfunction parseURL(url) {\r\n    var parser = document.createElement('a'),\r\n        searchObject = {},\r\n        queries, split, i;\r\n    parser.href = url;\r\n    queries = parser.search.replace(/^\\?/, '').split('&');\r\n    for (i = 0; i < queries.length; i++) {\r\n        split = queries[i].split('=');\r\n        searchObject[split[0]] = decodeURIComponent(split[1]);\r\n    }\r\n    return {\r\n        protocol: parser.protocol,\r\n        host: parser.host,\r\n        hostname: parser.hostname,\r\n        port: parser.port,\r\n        pathname: parser.pathname,\r\n        search: parser.search,\r\n        params: searchObject,\r\n        hash: parser.hash\r\n    };\r\n}\r\n\r\nfunction Callback(props) {\r\n    useEffect(() => {\r\n        if (!props.user) {\r\n            var url = parseURL(window.location.href);\r\n            // alert(window.location.href);\r\n            if (url.params.code) {\r\n                props.getAccessToken(url.params.code);\r\n            }\r\n        }\r\n    }, [props])\r\n\r\n    if (props.isLogged) {\r\n        return <Redirect to=\"/home\" />\r\n    } else {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user.user,\r\n        isLogged: state.ui.isLogged\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    getAccessToken\r\n}\r\n\r\nconst connectedCallback = connect(mapStateToProps, actionCreators)(Callback);\r\n\r\nexport default connectedCallback","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { authenticateUser } from \"../../redux/actions/userActions\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport NotLogged from \"../NotLogged/NotLogged\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport Callback from \"../Callback\";\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    const refreshToken = localStorage.getItem(\"refresh_token\");\r\n    if (!props.user && accessToken && refreshToken) {\r\n      props.authenticateUser(accessToken, refreshToken);\r\n    }\r\n  }, [props])\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Callback />\r\n      </Route>\r\n      <PrivateRoute path=\"/home\" component={HomePage} />\r\n      <Route path=\"/login\">\r\n        <NotLogged />\r\n      </Route>\r\n      <Route path=\"/spotify/callback\">\r\n        <Callback />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst actionCreators = {\r\n  authenticateUser\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.user.user,\r\n    user: state.user.tokens,\r\n    isLogged: state.ui.isLogged\r\n  }\r\n}\r\n\r\nconst connectedApp = connect(mapStateToProps, actionCreators)(App);\r\n\r\nexport default connectedApp;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { uiConstants } from \"../constants/uiConstants\";\r\nimport { userConstants } from \"../constants/userConstants\";\r\n\r\nlet defaultState = {\r\n    pageTitle: \"Tracks\",\r\n    isLogged: false\r\n};\r\n\r\nfunction UIReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case uiConstants.SET_PAGE_TITLE:\r\n            return {\r\n                ...state,\r\n                pageTitle: action.name\r\n            };\r\n        case uiConstants.LOG_USER:\r\n            return {\r\n                ...state,\r\n                isLogged: !state.isLogged\r\n            }\r\n            case userConstants.LOG_USER_DISCONNECT:\r\n                return defaultState\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default UIReducer;","import { userConstants } from \"../constants/userConstants\";\r\n\r\nlet defaultState = {\r\n};\r\n\r\nconst userReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case userConstants.LOG_USER_REQUEST:\r\n            return {\r\n                requesting: true\r\n            };\r\n        case userConstants.LOG_USER_STORE_TOKENS:\r\n            return {\r\n                tokens: action.tokens\r\n            };\r\n        case userConstants.LOG_USER_STORE_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOG_USER_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        case userConstants.LOG_USER_DISCONNECT:\r\n            return defaultState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { spotifyDataConstants } from \"../constants/spotifyDataConstants\"\r\n\r\nlet defaultState = {\r\n    topTracksRequesting: true,\r\n    topGenresRequesting: true\r\n};\r\n\r\nconst spotifyDataReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case spotifyDataConstants.SPOTIFY_DATA_TRACK_REQUEST:\r\n            return {\r\n                ...state,\r\n                topTracksRequesting: true\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_GENRE_REQUEST:\r\n            return {\r\n                ...state,\r\n                topGenresRequesting: true\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_FAILURE:\r\n            return {\r\n                error: action.error\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_MONTH:\r\n            return {\r\n                ...state,\r\n                topTracksRequesting: false,\r\n                topTracks: action.topTracks\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_LAST_MONTH:\r\n            return {\r\n                ...state,\r\n                topGenresRequesting: false,\r\n                topGenres: action.topGenres\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_LAST_6_MONTH:\r\n            return {\r\n                ...state,\r\n                topTracksRequesting: false,\r\n                topTracks: action.topTracks\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_LAST_6_MONTH:\r\n            return {\r\n                ...state,\r\n                topGenresRequesting: false,\r\n                topGenres: action.topGenres\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_TRACKS_ALL_TIME:\r\n            return {\r\n                ...state,\r\n                topTracksRequesting: false,\r\n                topTracks: action.topTracks\r\n            }\r\n        case spotifyDataConstants.SPOTIFY_DATA_STORE_TOP_GENRES_ALL_TIME:\r\n            return {\r\n                ...state,\r\n                topGenresRequesting: false,\r\n                topGenres: action.topGenres\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default spotifyDataReducer;","import uiReducer from \"./ui\";\r\nimport userReducer from \"./user\";\r\nimport spotifyDataReducer from \"./spotifyData\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst reducers = combineReducers({\r\n    ui: uiReducer,\r\n    user: userReducer,\r\n    spotifyData: spotifyDataReducer\r\n})\r\n\r\nexport default reducers","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducers from '../reducers';\r\nimport thunkMiddleware from \"redux-thunk\";\r\n// import { createLogger } from \"redux-logger\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            thunkMiddleware,\r\n        )\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/index\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <App />\r\n      </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const userConstants = {\r\n    LOG_USER_REQUEST: \"USER_LOG_USER_REQUEST\",\r\n    LOG_USER_STORE_USER: \"USER_LOG_USER_STORE_USER\",\r\n    LOG_USER_FAILURE: \"USER_LOG_USER_FAILURE\",\r\n    LOG_USER_DISCONNECT: \"USER_LOG_USER_DISCONNECT\",\r\n    LOG_USER_STORE_TOKENS: \"USER_LOG_USER_STORE_TOKENS\"\r\n}","export const uiConstants = {\r\n    SET_PAGE_TITLE: \"UI_SET_PAGE_TITLE\",\r\n    LOG_USER: \"UI_LOG_USER\"\r\n}"],"sourceRoot":""}